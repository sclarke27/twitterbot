<!-- Dynamic background image -->
<style class="text/css">
    body {
      background: rgba(74, 74, 74, 0.7) url("/assets/images/plantMon/{{{botName}}}.jpg") no-repeat;
      background-position: center;
      background-size: cover;
    }
</style>

<!-- Hidden refresh button -->
<div class='refreshButton' onclick='window.location.reload()'></div>

<main class="plantMon container-fluid">
    <div class="bg-overlay"></div>

    <section class="container">
        <div class="row">

            <!-- Block 1 -->
            <div class="col col-12 col-md-4">
                <div class="box box-light">

                    <!-- Start Gauge -->
                    <div class="gauge-wrap">

                        <!-- Top right icon - Type -->
                        <div class="icon-wrap">
                            <img src="/assets/icons/plant-alert-light.svg" alt="Light Icon">
                        </div>

                        <!-- Top left icon - Alert -->
                        <div class="icon-arrow">
                            <svg xmlns="http://www.w3.org/2000/svg" width="34" height="33" viewBox="0 0 34 33"> <path fill-rule="nonzero" d="M24.25.694H9.75v14.5H.083L17 32.111l16.917-16.917H24.25z"/></svg>
                        </div>

                        <div class="graphic">
                            <!-- Dynamic recon: Creating gauge components -->
                            <script type="text/recon">
                                @gauge {
                                    id: gauge
                                    host: '{{fullSwimUrl}}'
                                    {{!-- host: 'ws://192.168.0.204:5620' --}}
                                    node: '/sensor/light'
                                    transition: @transition(200, ease-in-out)

                                    # Gauge Values
                                    linkData: @link(lane: 'latest', type: value)
                                    meter: $round($linkData#0)/1000
                                    value: @text([{ $round($eager($linkData#0)) || 0} lx])

                                    # Gauge Style
                                    innerRadius: 90 @pct
                                    dialCornerRadius: 50 @pct
                                    faceColor: 'rgba(74, 74, 74, 0.6)'
                                    dialColor: '#fee54e'
                                    valueColor: '#fee54e'
                                    valueWeight: 400
                                    valueSize: 40 @pct
                                }
                            </script>
                        </div><!-- /graphic -->

                        <!-- Range Wrap -->
                        <div class="range-wrap">
                            <div class="backdrop-meter"></div>
                            <div class="meter"></div>
                            <span>
                                <script type="text/recon">
                                    @span {
                                        host: '{{fullSwimUrl}}'
                                        {{!-- host: 'ws://192.168.0.204:5620' --}}
                                        node: '/sensor/light'

                                        optionLink: @link(node: '/sensor/light', lane: 'option', type: value)
                                        optionValue: @let($optionLink#0)
                                        @input(type: hidden, class:'alert-setting', name: 'option-light', value: $optionValue || 0 )
                                    }
                                </script>
                                <input class="input-range" name="rangeInput" type="range" min="0" max="1000" />
                            </span>
                        </div><!-- /range-wrap -->

                        <!-- Bottom left icon - Alert -->
                        <div class="alert-wrap">
                            <svg xmlns="http://www.w3.org/2000/svg" width="29" height="29" viewBox="0 0 29 29"><g fill="none" fill-rule="evenodd"><path d="M0 0h29v29H0z"/><path fill-rule="nonzero" d="M12.095 25.387a2.403 2.403 0 0 0 2.405 2.405 2.403 2.403 0 0 0 2.405-2.405h-4.81zm10.718-5.063l2.562 2.562v1.28H3.625v-1.28l2.562-2.562v-7.032a8.305 8.305 0 0 1 6.392-8.084v-.87c0-1.063.858-1.921 1.921-1.921 1.063 0 1.921.858 1.921 1.92v.87a8.305 8.305 0 0 1 6.392 8.085v7.032zM15.872 7.887h-2.61v5.148c0 .552.033 1.1.099 1.643.066.543.153 1.096.261 1.66h1.89c.108-.564.195-1.117.261-1.66a13.6 13.6 0 0 0 .099-1.643V7.887zm-2.916 11.7a1.526 1.526 0 0 0 .455 1.098c.14.138.307.246.499.324.192.078.402.117.63.117.222 0 .429-.039.621-.117a1.58 1.58 0 0 0 .504-.324c.144-.138.256-.301.338-.49.08-.19.121-.392.121-.608a1.494 1.494 0 0 0-.459-1.089 1.645 1.645 0 0 0-.504-.329 1.581 1.581 0 0 0-.621-.121 1.604 1.604 0 0 0-1.13.45c-.14.138-.251.3-.332.486a1.494 1.494 0 0 0-.122.603z"/></g></svg>

                            <div class="text">@ <span class="value"></span> lx</div>
                        </div>

                    </div><!-- /gauge-wrap -->

                    <!-- Start Chart -->
                    <div class="chart-wrap">
                        <div class="graphic">

                            <!-- Dynamic recon: Creating chart components -->
                            <script type="text/recon">
                                @chart {
                                    id: chart
                                    host: '{{fullSwimUrl}}'
                                    {{!-- host: 'ws://192.168.0.204:5620' --}}
                                    node: '/sensor/light'
                                    transition: @transition(200, ease-in-out)

                                    @plot(type: area) {
                                        historyLink: @link(lane: 'history', type: map)
                                        areaFill: '#fee54e'
                                        @each(t: $historyLink.*:) {
                                            key: $t
                                            @plotPoint {
                                                v: @let($historyLink.($t))
                                                x: $t
                                                y: $round($eager($v/10))
                                                dy: 0
                                            }
                                        }
                                    }

                                    top: {
                                        gutter: '50px'
                                    }
                                    right: {
                                        gutter: '0px'
                                    }
                                    bottom: @axis(type: time) {
                                        gutter: '0px'
                                        hidden: true
                                    }
                                    left: @axis(type: linear) {
                                        gutter: '0px'
                                        hidden: true
                                    }

                                    domainBoundLeft: true
                                    domainBoundRight: true
                                    domainPaddingTop: 1
                                    domainPaddingBottom: 1
                                }
                            </script>
                        </div>
                    </div><!-- /chart-wrap -->
                </div><!-- /box -->
            </div><!-- /block-1 -->

            <!-- Block 2 -->
            <div class="col col-12 col-md-4">
                <div class="box box-soil">
                    <div class="gauge-wrap">

                        <!-- Top right icon - Type -->
                        <div class="icon-wrap">
                            <img class="plus" src="/assets/icons/plant-alert-soil.svg" alt="Soil Alert Icon" width="62px" height="62px">
                            <img class="ok" src="/assets/icons/plant-soil.svg" alt="Soil Icon" width="49px" height="49px">
                        </div>

                        <!-- Top left icon - Alert -->
                        <div class="icon-arrow">
                            <svg xmlns="http://www.w3.org/2000/svg" width="34" height="33" viewBox="0 0 34 33"> <path fill-rule="nonzero" d="M24.25.694H9.75v14.5H.083L17 32.111l16.917-16.917H24.25z"/></svg>
                        </div>

                        <!-- Start Gauge -->
                        <div class="graphic">
                            <!-- Dynamic recon: Creating gauge components -->
                            <script type="text/recon">
                                @gauge {
                                    id: gauge
                                    host: '{{fullSwimUrl}}'
                                    {{!-- host: 'ws://192.168.0.204:5620' --}}
                                    node: '/sensor/soil'
                                    transition: @transition(500, ease-in-out)

                                    # Gauge Values
                                    linkData: @link(lane: 'latest', type: value)
                                    meter: $round($linkData#0)/1000
                                    value: @text([{ $round($eager($linkData#0/10)) || 0}%])

                                    # Gauge Style
                                    innerRadius: 90 @pct
                                    dialCornerRadius: 50 @pct
                                    faceColor: 'rgba(74, 74, 74, 0.6)'
                                    dialColor: '#4bc8ff'
                                    valueColor: '#4bc8ff'
                                    valueWeight: 400
                                    valueSize: 40 @pct
                                }
                            </script>
                        </div><!-- /gauge-wrap -->

                        <!-- Range Wrap -->
                        <div class="range-wrap">
                            <div class="backdrop-meter"></div>
                            <div class="meter"></div>
                            <span>
                                <input class="input-range" name="rangeInput" type="range" min="0" max="1000" />
                            </span>
                        </div><!-- /range-wrap -->

                        <!-- Bottom left icon - Alert -->
                        <div class="alert-wrap">
                            <svg xmlns="http://www.w3.org/2000/svg" width="29" height="29" viewBox="0 0 29 29"><g fill="none" fill-rule="evenodd"><path d="M0 0h29v29H0z"/><path fill-rule="nonzero" d="M12.095 25.387a2.403 2.403 0 0 0 2.405 2.405 2.403 2.403 0 0 0 2.405-2.405h-4.81zm10.718-5.063l2.562 2.562v1.28H3.625v-1.28l2.562-2.562v-7.032a8.305 8.305 0 0 1 6.392-8.084v-.87c0-1.063.858-1.921 1.921-1.921 1.063 0 1.921.858 1.921 1.92v.87a8.305 8.305 0 0 1 6.392 8.085v7.032zM15.872 7.887h-2.61v5.148c0 .552.033 1.1.099 1.643.066.543.153 1.096.261 1.66h1.89c.108-.564.195-1.117.261-1.66a13.6 13.6 0 0 0 .099-1.643V7.887zm-2.916 11.7a1.526 1.526 0 0 0 .455 1.098c.14.138.307.246.499.324.192.078.402.117.63.117.222 0 .429-.039.621-.117a1.58 1.58 0 0 0 .504-.324c.144-.138.256-.301.338-.49.08-.19.121-.392.121-.608a1.494 1.494 0 0 0-.459-1.089 1.645 1.645 0 0 0-.504-.329 1.581 1.581 0 0 0-.621-.121 1.604 1.604 0 0 0-1.13.45c-.14.138-.251.3-.332.486a1.494 1.494 0 0 0-.122.603z"/></g></svg>

                            <div class="text">
                                @ <span class="value"></span> %
                            </div>
                        </div>
                    </div>

                    <!-- Start Chart -->
                    <div class="chart-wrap">
                        <div class="graphic">

                            <!-- Dynamic recon: Creating chart components -->
                            <script type="text/recon">
                                @chart {
                                    id: chart
                                    host: '{{fullSwimUrl}}'
                                    {{!-- host: 'ws://192.168.0.204:5620' --}}
                                    node: '/sensor/soil'
                                    transition: @transition(200, ease-in-out)

                                    @plot(type: area) {
                                        historyLink: @link(lane: 'history', type: map)
                                        areaFill: '#4bc8ff'
                                        @each(t: $historyLink.*:) {
                                            key: $t
                                            @plotPoint {
                                                v: @let($historyLink.($t))
                                                x: $t
                                                y: $round($eager($v/10))
                                                dy: 0
                                            }
                                        }
                                    }

                                    top: {
                                        gutter: '50px'
                                    }
                                    right: {
                                        gutter: '0px'
                                    }
                                    bottom: @axis(type: time) {
                                        gutter: '0px'
                                        hidden: true
                                    }
                                    left: @axis(type: linear) {
                                        gutter: '0px'
                                        hidden: true
                                    }

                                    domainBoundLeft: true
                                    domainBoundRight: true
                                    domainPaddingTop: 1
                                    domainPaddingBottom: 1
                                }
                            </script>
                        </div>
                    </div><!-- /chart-wrap -->
                </div><!-- /box -->
            </div><!-- /block-2 -->

            <!-- Block 3 -->
            <div class="col col-12 col-md-4">
                <div class="box box-temperatureCh1">
                    <div class="gauge-wrap">

                        <!-- Top right icon - Type -->
                        <div class="icon-wrap">
                            <img src="/assets/icons/plant-alert-temperature.svg" alt="Light Icon">
                        </div>

                        <!-- Top left icon - Alert -->
                        <div class="icon-arrow">
                            <svg xmlns="http://www.w3.org/2000/svg" width="34" height="33" viewBox="0 0 34 33"> <path fill-rule="nonzero" d="M24.25.694H9.75v14.5H.083L17 32.111l16.917-16.917H24.25z"/></svg>
                        </div>

                        <!-- Start Gauge -->
                        <div class="graphic">
                            <!-- Dynamic recon: Creating gauge components -->
                            <script type="text/recon">
                                @gauge {
                                    id: gauge
                                    host: '{{fullSwimUrl}}'
                                    {{!-- host: 'ws://192.168.0.204:5620' --}}
                                    node: '/sensor/temperatureCh1'
                                    transition: @transition(500, ease-in-out)

                                    # Gauge Values
                                    linkData: @link(lane: 'latest', type: value)
                                    meter: $round($linkData#0)/100
                                    value: @text([{ $round($eager($linkData#0)) || 0}°])

                                    # Gauge Style
                                    innerRadius: 90 @pct
                                    dialCornerRadius: 50 @pct
                                    faceColor: 'rgba(74, 74, 74, 0.6)'
                                    dialColor: '#ff904e'
                                    valueColor: '#ff904e'
                                    valueWeight: 400
                                    valueSize: 40 @pct
                                }
                            </script>
                        </div><!-- /gauge-wrap -->

                        <!-- Range Wrap -->
                        <div class="range-wrap">
                            <div class="backdrop-meter"></div>
                            <div class="meter"></div>
                            <span>
                                <input class="input-range" name="rangeInput" type="range" min="0" max="100" />
                            </span>
                        </div><!-- /range-wrap -->

                        <!-- Bottom left icon - Alert -->
                        <div class="alert-wrap">
                            <svg xmlns="http://www.w3.org/2000/svg" width="29" height="29" viewBox="0 0 29 29"><g fill="none" fill-rule="evenodd"><path d="M0 0h29v29H0z"/><path fill-rule="nonzero" d="M12.095 25.387a2.403 2.403 0 0 0 2.405 2.405 2.403 2.403 0 0 0 2.405-2.405h-4.81zm10.718-5.063l2.562 2.562v1.28H3.625v-1.28l2.562-2.562v-7.032a8.305 8.305 0 0 1 6.392-8.084v-.87c0-1.063.858-1.921 1.921-1.921 1.063 0 1.921.858 1.921 1.92v.87a8.305 8.305 0 0 1 6.392 8.085v7.032zM15.872 7.887h-2.61v5.148c0 .552.033 1.1.099 1.643.066.543.153 1.096.261 1.66h1.89c.108-.564.195-1.117.261-1.66a13.6 13.6 0 0 0 .099-1.643V7.887zm-2.916 11.7a1.526 1.526 0 0 0 .455 1.098c.14.138.307.246.499.324.192.078.402.117.63.117.222 0 .429-.039.621-.117a1.58 1.58 0 0 0 .504-.324c.144-.138.256-.301.338-.49.08-.19.121-.392.121-.608a1.494 1.494 0 0 0-.459-1.089 1.645 1.645 0 0 0-.504-.329 1.581 1.581 0 0 0-.621-.121 1.604 1.604 0 0 0-1.13.45c-.14.138-.251.3-.332.486a1.494 1.494 0 0 0-.122.603z"/></g></svg>

                            <div class="text">
                                @ <span class="value"></span> &deg;
                            </div>
                        </div>
                    </div>

                    <!-- Start Chart -->
                    <div class="chart-wrap">
                        <div class="graphic">

                            <!-- Dynamic recon: Creating chart components -->
                            <script type="text/recon">
                                @chart {
                                    id: chart
                                    host: '{{fullSwimUrl}}'
                                    {{!-- host: 'ws://192.168.0.204:5620' --}}
                                    node: '/sensor/temperatureCh1'
                                    transition: @transition(500, ease-in-out)

                                    @plot(type: area) {
                                        historyLink: @link(lane: 'history', type: map)
                                        areaFill: '#ff904e'
                                        @each(t: $historyLink.*:) {
                                            key: $t
                                            @plotPoint {
                                                v: @let($historyLink.($t))
                                                x: $t
                                                y: $round($eager($v/10))
                                                dy: 0
                                            }
                                        }
                                    }

                                    top: {
                                        gutter: '50px'
                                    }
                                    right: {
                                        gutter: '0px'
                                    }
                                    bottom: @axis(type: time) {
                                        gutter: '0px'
                                        hidden: true
                                    }
                                    left: @axis(type: linear) {
                                        gutter: '0px'
                                        hidden: true
                                    }

                                    domainBoundLeft: true
                                    domainBoundRight: true
                                    domainPaddingTop: 1
                                    domainPaddingBottom: 1
                                }
                            </script>

                        </div>
                    </div><!-- /chart-wrap -->
                </div><!-- /box -->
            </div><!-- /block-3 -->

        </div><!-- /row -->
    </section><!-- /container -->
</main><!-- /main -->

<!-- Javascript: Loading class and initialize when page load-->
<script type="text/javascript" src="/js/plantPage.js"></script>
<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function(){
        const page = new PlantPage(document.querySelector('.plantMon'), '{{routeName}}');
        page.setSwimURL('{{fullSwimUrl}}');
        // page.setSwimURL('ws://192.168.0.204:5620');
        page.start('{{aggregateSwimUrl}}');
    }, false);
</script>
