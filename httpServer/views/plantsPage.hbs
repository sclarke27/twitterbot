<script src="/assets/swim-app.js" swim-app></script>

<style>
    .mainContainer div:first-child {
        display: flex;
        flex-grow: 1;
    }
    .mainContainer {
        height: calc(100% - 50px);
    }


    #plantImage {
        background-image: url('/assets/plant1Latest.jpg');
        background-position: center center;
        background-repeat: no-repeat;
        background-size: cover;
    }

    .containerHeader {
        background-color: rgba(0, 255, 0, 0.07);
    }
</style>


<script type="text/recon">
    @board {
        host: 'ws://75.50.82.129:5620'
        transition: @transition(150, ease-in-out)

        gaugeInnerRadius: 50 @pct
        gaugeDialCornerRadius: 0 @pct
        gaugeFaceColor: 'rgba(200,200,200,0.5)'
        gaugeDialColor: 'rgba(0,200,0,1)'
        gaugeValueColor: 'rgba(0,255,0,1)'
        gaugeValueWeight: 800
        gaugeValueSize: 170 @px
        
        surface: @div(id: plantImage)

        bottom: @h2{
            style : {
                font-size: '42px'
            }
            [Plant One]
        } 
        
        left: @totem {
            desiredWidth: '300px'
            minVisibleWidth: '0px'
            @tile {
                body: @gauge {
                    node: '/sensor/soil'
                    lane: 'latest'
                    linkData: @link(host: $host, node: $node, lane: $lane, type: value)

                    # Gauge Values
                    meter: $round($linkData#0)/1000
                    value: @text([{ $round($eager($linkData#0/10)) || 0}%])

                    # Gauge Style
                    id: soilGauge
                    innerRadius: $gaugeInnerRadius
                    dialCornerRadius: $gaugeDialCornerRadius
                    dialColor: 'rgba(127,72,0,1)'
                    faceColor: $gaugeFaceColor
                    valueColor: 'rgba(127,72,0,1)'
                    valueWeight: $gaugeValueWeight
                    valueSize: $gaugeValueSize
                }
            }            
            @tile {
                body: @gauge {
                    node: '/sensor/light'
                    lane: 'latest'
                    linkData: @link(host: $host, node: $node, lane: $lane, type: value)

                    # Gauge Values
                    meter: $round($linkData#0)/1000
                    value: @text([{ $round($eager($linkData#0/10)) || 0}%])

                    # Gauge Style
                    id: lightGauge
                    innerRadius: $gaugeInnerRadius
                    dialCornerRadius: $gaugeDialCornerRadius
                    dialColor: 'rgba(255,255,0,1)'
                    faceColor: $gaugeFaceColor
                    valueColor: 'rgba(255,255,0,1)'
                    valueWeight: $gaugeValueWeight
                    valueSize: $gaugeValueSize

                }
            }
        }
        right: @totem {
            desiredWidth: '300px'
            minVisibleWidth: '0px'
            @tile {
                body: @gauge {
                    node: '/sensor/temperatureCh1'
                    lane: 'latest'
                    linkData: @link(host: $host, node: $node, lane: $lane, type: value)

                    # Gauge Values
                    meter: $round($linkData#0)/100
                    value: @text([{ $round($eager($linkData#0)) || 0}°F])

                    # Gauge Style
                    id: tempGauge0
                    innerRadius: $gaugeInnerRadius
                    dialCornerRadius: $gaugeDialCornerRadius
                    dialColor: $gaugeDialColor
                    faceColor: $gaugeFaceColor
                    valueColor: $gaugeValueColor
                    valueWeight: $gaugeValueWeight
                    valueSize: $gaugeValueSize
                }
            }
            @tile {
                body: @gauge {
                    node: '/sensor/temperatureCh2'
                    lane: 'latest'
                    linkData: @link(host: $host, node: $node, lane: $lane, type: value)

                    # Gauge Values
                    meter: $round($linkData#0)/100
                    value: @text([{ $round($eager($linkData#0)) || 0}°F])

                    # Gauge Style
                    id: tempGauge1
                    innerRadius: $gaugeInnerRadius
                    dialCornerRadius: $gaugeDialCornerRadius
                    dialColor: $gaugeDialColor
                    faceColor: $gaugeFaceColor
                    valueColor: $gaugeValueColor
                    valueWeight: $gaugeValueWeight
                    valueSize: $gaugeValueSize

                }
            }                     
        }
    }
</script>

